#BlueJ class context
comment0.target=BDgeral
comment1.params=
comment1.target=BDgeral()
comment1.text=\n\ Construtor\ sem\ argumentos.\n
comment10.params=
comment10.target=void\ adicionaConselhos()
comment10.text=\n\ Metodo\ que\ adiciona\ conselhos\ a\ base\ de\ dados\ de\ setores.\n
comment11.params=s
comment11.target=boolean\ containsConselho(java.lang.String)
comment11.text=\n\ Metodo\ que\ verifica\ se\ um\ conselho\ esta\ inserido\ na\ base\ de\ dados\ de\ setores.\n\ @param\ s\ \ \ \ \ Setor\ a\ verificar.\n\ @return\ \ \ \ \ \ Boolean\ que\ confirma\ a\ existencia\ do\ conselho.\n
comment12.params=
comment12.target=java.util.List\ getConselhos()
comment12.text=\n\ Get\ para\ a\ lista\ de\ conselhos\ inseridos\ no\ objeto.\n\ @return\ \ Lista\ de\ conselhos\ inseridos\ no\ objeto.\n
comment13.params=i
comment13.target=void\ addIndividual(CIndividual)
comment13.text=\n\ Metodo\ que\ adiciona\ um\ contribuinte\ individual\ na\ base\ de\ dados\n\ @param\ i\ \ \ \ \ Contribuinte\ a\ inserir\n
comment14.params=i
comment14.target=void\ addEmpresa(Empresa)
comment14.text=\n\ Metodo\ que\ adiciona\ uma\ empresa\ na\ base\ de\ dados\n\ @param\ i\ \ \ \ \ Empresa\ a\ inserir\n
comment15.params=i
comment15.target=void\ addFatura(Fatura)
comment15.text=\n\ Metodo\ que\ adiciona\ uma\ fatura\ na\ base\ de\ dados\n\ @param\ i\ \ \ \ \ Fatura\ a\ inserir\n
comment16.params=s
comment16.target=void\ addSetor(Setor)
comment16.text=\n\ Metodo\ que\ adiciona\ um\ setor\ na\ base\ de\ dados\n\ @param\ s\ \ \ \ \ Setor\ a\ inserir\n
comment17.params=nif
comment17.target=Empresa\ getEmpresa(int)
comment17.text=\n\ Metodo\ que\ retorna\ procura\ uma\ empresa\ dado\ um\ nif,\ da\ throw\ a\ ErroNotFound\ caso\ nao\ seja\ encontrada.\n\ @param\ \ nif\ Nif\ a\ procurar.\n\ @return\ \ \ \ \ Empresa\ encontrada.\n
comment18.params=nif
comment18.target=CIndividual\ getCIndividual(int)
comment18.text=\n\ Metodo\ que\ retorna\ procura\ um\ contribuinte\ individual\ dado\ um\ nif,\ da\ throw\ a\ ErroNotFound\ caso\ nao\ seja\ encontrado.\n\ @param\ \ nif\ Nif\ a\ procurar.\n\ @return\ \ \ \ \ Contribuinte\ individual\ encontrada.\n
comment19.params=
comment19.target=java.lang.String\ toString()
comment19.text=\n\ M\u00E9todo\ toString\ do\ objeto.\n\ @return\ Objeto\ em\ modo\ string.\n
comment2.params=a\ b\ c\ d
comment2.target=BDgeral(BDContribuintes,\ BDContribuintes,\ BDFaturas,\ BDSetores)
comment2.text=\n\ Construtor\ com\ argumentos.\n\ @param\ a\ \ \ \ \ \ \ \ \ Base\ de\ Dados\ de\ empresas\ a\ introduzir.\n\ @param\ b\ \ \ \ \ \ \ \ \ Base\ de\ Dados\ de\ contribuintes\ individuais\ a\ introduzir.\n\ @param\ c\ \ \ \ \ \ \ \ \ Base\ de\ Dados\ de\ faturas\ a\ introduzir.\n\ @param\ d\ \ \ \ \ \ \ \ \ Base\ de\ dados\ dos\ setores\ a\ introduzir.\n
comment20.params=
comment20.target=java.lang.String\ toStringIndividuais()
comment20.text=\n\ M\u00E9todo\ toString\ do\ objeto\ que\ guarda\ os\ contribuinte\ individuais.\n\ @return\ Objeto\ em\ modo\ string.\n
comment21.params=
comment21.target=java.lang.String\ toStringEmpresas()
comment21.text=\n\ M\u00E9todo\ toString\ do\ objeto\ guarda\ as\ empresas.\n\ @return\ Objeto\ em\ modo\ string.\n
comment22.params=
comment22.target=java.lang.String\ toStringSetores()
comment22.text=\n\ M\u00E9todo\ toString\ do\ objeto\ guarda\ os\ setores\ de\ dedu\u00E7\u00E3o.\n\ @return\ Objeto\ em\ modo\ string.\n
comment23.params=
comment23.target=java.lang.String\ toStringFaturas()
comment23.text=\n\ M\u00E9todo\ toString\ do\ objeto\ guarda\ as\ faturas.\n\ @return\ Objeto\ em\ modo\ string.\n
comment24.params=a
comment24.target=double\ deducao_fatura_semCliente(Fatura)
comment24.text=\n\ M\u00E9todo\ que\ deduz\ o\ montante\ de\ uma\ fatura\ sem\ ter\ em\ conta\ o\ cliente.\n\ @param\ \ a\ \ \ Fatura\ a\ verificar.\n\ @return\ \ \ \ \ Montante\ a\ receber\ do\ contribuinte.\n
comment25.params=a
comment25.target=double\ deducao_fatura_total(Fatura)
comment26.params=e
comment26.target=double\ deduz_montante(Contribuinte)
comment26.text=\n\ M\u00E9todo\ que\ deduz\ o\ montante\ de\ um\ dado\ contribuinte.\n\ @param\ \ e\ \ \ Contribuinte\ a\ verificar.\n\ @return\ \ \ \ \ Montante\ a\ receber\ do\ contribuinte.\n
comment27.params=nif
comment27.target=double\ deduz_montante_Individual(int)
comment27.text=\n\ M\u00E9todo\ que\ deduz\ o\ montante\ de\ um\ contribuinte\ individual,caso\ nao\ encontre\ o\ contribuinte\ da\ throw\ ErrorNotFound.\n\ @param\ \ nif\ Contribuinte\ a\ verificar.\n\ @return\ \ \ \ \ Montante\ a\ receber\ .\n
comment28.params=type\ id
comment28.target=java.util.List\ listagem_ordenada_emp_fatura(boolean,\ int)
comment28.text=\n\ Metodo\ que\ devolve\ a\ lista\ de\ faturas\ de\ uma\ empresa\ ordenada\ conforme\ os\ parametros\ dados.\n\ @param\ type\ \ Boolean\ que\ permite\ a\ ordenacao\ com\ base\ o\ tempo/valor.\n\ @param\ id\ \ \ \ ID\ da\ empresa.\n\ @return\ \ \ \ \ \ Lista\ de\ faturas.\n
comment29.params=start\ end\ id
comment29.target=java.util.Map\ listagem_cont_fatura_time(java.time.LocalDate,\ java.time.LocalDate,\ int)
comment29.text=\n\ Metodo\ que\ devolve\ a\ lista\ de\ faturas\ \ (Map\ de\ <Consumidor,List<Fatura>>)\ de\ uma\ empresa\ ordenada\ conforme\ um\ intervalo\ de\ tempo.\n\ @param\ start\ Data\ inicial.\n\ @param\ end\ \ \ Data\ final.\n\ @param\ id\ \ \ \ ID\ da\ empresa.\n\ @return\ \ \ \ \ \ Map\ de\ faturas.\n
comment3.params=a
comment3.target=BDgeral(BDgeral)
comment3.text=\n\ Construtor\ com\ argumentos.\n\ @param\ a\ \ Contribuinte\ a\ copiar.\n
comment30.params=id
comment30.target=java.util.Map\ listagem_cont_fatura(int)
comment30.text=\n\ Metodo\ que\ devolve\ a\ lista\ de\ faturas\ \ (Map\ de\ <Consumidor,List<Fatura>>)\ de\ uma\ empresa.\n\ @param\ id\ \ \ \ ID\ da\ empresa.\n\ @return\ \ \ \ \ \ Map\ de\ faturas.\n
comment31.params=start\ end\ id
comment31.target=double\ total_faturado(java.time.LocalDate,\ java.time.LocalDate,\ int)
comment31.text=\n\ Metodo\ que\ devolve\ o\ total\ faturado\ de\ uma\ empresa\ ordenada\ durante\ um\ intervalo\ de\ tempo.\n\ @param\ start\ Data\ inicial.\n\ @param\ end\ \ \ Data\ final.\n\ @param\ id\ \ \ \ ID\ da\ empresa.\n\ @return\ \ \ \ \ \ Total\ faturado\ da\ empresa.\n
comment32.params=
comment32.target=double\ rel_top10()
comment32.text=\n\ Metodo\ que\ devolve\ a\ razao\ entre\ os\ 10\ clientes\ que\ mais\ faturaram,\ da\ throw\ a\ ArithmeticException\ se\ o\ total\ for\ 0.\n\ @return\ \ \ \ \ \ Razao\ entre\ os\ 10\ clientes\ que\ mais\ faturaram.\n
comment33.params=f1\ f2
comment33.target=int\ compare(java.lang.Double,\ java.lang.Double)
comment34.params=x
comment34.target=double\ top_X_faturacao(int)
comment34.text=\n\ Metodo\ que\ devolve\ a\ razao\ entre\ os\ X\ clientes\ que\ mais\ faturaram.\n\ @param\ \ \ x\ \ \ Numero\ de\ clientes.\n\ @return\ \ \ \ \ \ Total\ faturado\ da\ empresa.\n
comment35.params=f1\ f2
comment35.target=int\ compare(java.util.Map.Entry,\ java.util.Map.Entry)
comment36.params=nif
comment36.target=java.lang.String\ escolheSetor(int)
comment36.text=\n\ Metodo\ que\ escolhe\ o\ setor\ de\ uma\ fatura\ faturada\ por\ uma\ dada\ empresa.\n\ @param\ \ \ nif\ Nif\ da\ empresa.\n\ @return\ \ \ \ \ \ Setor\ escolhido.\n
comment37.params=nif
comment37.target=void\ valida_faturas_contribuinte(int)
comment37.text=\n\ Metodo\ que\ valida\ as\ faturas\ de\ um\ dado\ contribuinte\ individual.\n\ @param\ \ \ nif\ Nif\ do\ contribuinte\ individual.\n
comment38.params=
comment38.target=void\ Setores_admin()
comment38.text=\n\ Metodo\ que\ permite\ o\ admin\ aprovar\ os\ setores\ da\ base\ de\ dados,\ da\ throw\ a\ AdminAprov\ caso\ nao\ existam\ setores\ por\ aprovar.\n
comment39.params=a
comment39.target=java.util.List\ getFaturas_de_Id(java.util.Set)
comment39.text=\n\ Metodo\ que\ devolve\ a\ listagem\ de\ faturas\ de\ um\ dado\ contribuinte.\n\ @param\ \ a\ \ \ \ Lista\ de\ faturas\ do\ contribuinte.\n\ @return\ \ \ \ \ \ Lista\ de\ faturas.\n
comment4.params=nome
comment4.target=void\ guardaEstado(java.lang.String)
comment4.text=\n\ Metodo\ para\ guardar\ o\ estado\ do\ objeto.\n\ @param\ nome\ \ Nome\ do\ ficheiro\ a\ guardar.\n
comment40.params=nif\ s\ type
comment40.target=void\ addSetor(int,\ java.lang.String,\ boolean)
comment40.text=\n\ Metodo\ que\ adiciona\ um\ setor\ a\ uma\ empresa/contribuinte\ individual,\ da\ throw\ a\ ErrorNotFound\ caso\ nao\ seja\ encontrado\n\ @param\ nif\ \ \ \ \ \ \ Nif\ a\ qual\ vai\ ser\ adicionado\ o\ setor\n\ @param\ s\ \ \ \ \ \ \ \ \ Setor\ a\ ser\ adicionado\n\ @param\ type\ \ \ \ \ \ True\ caso\ seja\ contribuinte\ individual,\ false\ caso\ seja\ empresa\n
comment41.params=nif\ nif_agregado
comment41.target=void\ addAgregado(int,\ int)
comment41.text=\n\ Metodo\ que\ adiciona\ um\ agregado\ a\ um\ contribuinte\ individual.\n\ @param\ \ nif\ \ \ \ \ \ \ \ \ \ Nif\ do\ contribuinte\ a\ qual\ vai\ ser\ inserido\ o\ agregado.\n\ @param\ nif_agregado\ \ Nif\ a\ ser\ adicionar\ ao\ agregado.\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ Lista\ de\ faturas.\n
comment5.params=nome
comment5.target=void\ carregaEstado(java.lang.String)
comment5.text=\n\ Metodo\ para\ carregar\ o\ estado\ de\ um\ dado\ ficheiro.\n\ @param\ nome\ \ Nome\ do\ ficheiro\ a\ carregar.\n
comment6.params=
comment6.target=BDContribuintes\ getBDEmpresas()
comment6.text=\n\ Get\ para\ a\ vari\u00E1vel\ empresas\ do\ objeto.\n\ @return\ \ Base\ de\ dados\ de\ empresas\ do\ objeto.\n
comment7.params=
comment7.target=BDContribuintes\ getBDIndividuais()
comment7.text=\n\ Get\ para\ a\ vari\u00E1vel\ contribuintes\ individuais\ do\ objeto.\n\ @return\ \ Base\ de\ dados\ de\ contribuintes\ individuais\ do\ objeto.\n
comment8.params=
comment8.target=BDFaturas\ getBDFaturas()
comment8.text=\n\ Get\ para\ a\ vari\u00E1vel\ faturas\ do\ objeto.\n\ @return\ \ Base\ de\ dados\ de\ faturas\ do\ objeto.\n
comment9.params=
comment9.target=BDSetores\ getBDSetores()
comment9.text=\n\ Get\ para\ a\ vari\u00E1vel\ setores\ do\ objeto.\n\ @return\ \ Base\ de\ dados\ dos\ setores\ do\ objeto.\n
numComments=42
