#BlueJ class context
comment0.target=BDFaturas
comment1.params=
comment1.target=BDFaturas()
comment1.text=\n\ Construtor\ sem\ argumentos.\n
comment10.params=a\ i\ e\ d
comment10.target=void\ addFatura(Fatura,\ BDContribuintes,\ BDContribuintes,\ BDSetores)
comment10.text=\n\ M\u00E9todo\ que\ adiciona\ uma\ fatura\ ao\ objeto.\n\ param\ a\ \ Fatura\ a\ adicionar.\n\ param\ i\ \ Base\ de\ dados\ dos\ contribuintes\ individuais.\n\ param\ e\ \ Base\ de\ dados\ dos\ contribuintes\ empresas.\n\ param\ d\ \ Base\ de\ dados\ dos\ setores.\n
comment11.params=id
comment11.target=Fatura\ getFatura(int)
comment11.text=\n\ Metodo\ que\ retorna\ uma\ fatura\ de\ um\ dado\ id,\ caso\ nao\ encontra\ efetua\ throw\ ErrorNotFound\n\ @param\ \ \ id\ \ Id\ a\ efetuar\ procura.\n\ @return\ \ \ \ \ \ Fatura\ do\ id.\n
comment12.params=start\ end\ idlist
comment12.target=java.util.List\ faturas_no_intervalo(java.time.LocalDate,\ java.time.LocalDate,\ java.util.Set)
comment12.text=\n\ Metodo\ que\ retorna\ uma\ lista\ de\ faturas\ de\ um\ dado\ id\ e\ numa\ dada\ data.\n\ @param\ \ \ start\ \ \ Id\ a\ efetuar\ procura.\n\ @param\ \ \ end\ \ \ \ \ Id\ a\ efetuar\ procura.\n\ @param\ \ \ idlist\ \ Id\ a\ efetuar\ procura.\n\ @return\ \ \ \ \ \ \ \ \ \ Lista\ das\ faturas.\n
comment13.params=idlist
comment13.target=java.util.List\ faturas_contribuinte(java.util.Set)
comment13.text=\n\ Metodo\ que\ retorna\ uma\ lista\ de\ faturas\ dos\ ids\ dados.\n\ @param\ \ \ islist\ \ Ids\ para\ efetuar\ procura.\n\ @return\ \ \ \ \ \ \ \ \ \ Lista\ das\ faturas.\n
comment14.params=id
comment14.target=boolean\ check_val_fatura(int)
comment14.text=\n\ Metodo\ que\ verifica\ se\ existe\ uma\ data\ fatura\ esta\ validada.\n\ @param\ id\ \ \ \ Fatura\ a\ verificar.\n\ @return\ \ \ \ \ \ Boolean\ que\ representa\ se\ a\ fatura\ foi\ ou\ nao\ validada.\n
comment15.params=id\ setor\ set
comment15.target=void\ valida_fatura(int,\ java.lang.String,\ BDSetores)
comment15.text=\n\ Metodo\ que\ valida\ uma\ data\ fatura,da\ throw\ a\ ErrorNotFound\ caso\ nao\ seja\ encontrada\ a\ fatura\ e\ FaturaVal\ caso\ a\ fatura\ esteja\ valida.\n\ @param\ id\ \ \ \ \ \ \ \ Fatura\ a\ validar.\n\ @param\ setor\ \ \ \ \ Setor\ da\ fatura.\n\ @param\ set\ \ \ \ \ \ \ Base\ de\ dados\ dos\ setores.\n
comment2.params=a
comment2.target=BDFaturas(java.util.Map)
comment2.text=\n\ Construtor\ com\ argumentos.\n\ @param\ a\ \ \ \ \ \ \ \ Map\ de\ faturas\ a\ introduzir.\n
comment3.params=a
comment3.target=BDFaturas(BDFaturas)
comment3.text=\n\ Construtor\ com\ outra\ BDFaturas.\n\ @param\ a\ \ \ \ Base\ de\ dados\ de\ faturas\ a\ copiar.\n
comment4.params=
comment4.target=java.util.Map\ getFaturas()
comment4.text=\n\ Get\ para\ a\ vari\u00E1vel\ faturas\ do\ objeto.\n\ @return\ \ Faturas\ (Map<Integer,Fatura>)\ do\ objeto\n
comment5.params=a
comment5.target=void\ setFaturas(java.util.Map)
comment5.text=\n\ M\u00E9todo\ set\ da\ vari\u00E1vel\ faturas.\n\ @param\ a\ \ \ \ \ \ \ Valor\ a\ introduzir.\n
comment6.params=
comment6.target=java.util.Set\ getFaturas_porval()
comment6.text=\n\ Get\ para\ a\ vari\u00E1vel\ faturas_porval\ do\ objeto.\n\ @return\ \ Faturas\ por\ validar\ (Set<Integer>)\ do\ objeto\n
comment7.params=
comment7.target=BDFaturas\ clone()
comment7.text=\n\ M\u00E9todo\ que\ clona\ este\ objeto.\n\ @return\ clone\ do\ objeto\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ M\u00E9todo\ toString\ do\ objeto.\n\ @return\ objeto\ em\ modo\ string\n
comment9.params=object
comment9.target=boolean\ equals(java.lang.Object)
comment9.text=\n\ M\u00E9todo\ equal\ do\ objeto.\n\ @return\ booelan\ que\ verifica\ se\ o\ objeto\ e\ igual\n
numComments=16
